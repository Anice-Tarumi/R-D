/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef,useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { Color, MeshBasicMaterial, MeshNormalMaterial, MeshStandardMaterial } from 'three'

export default function Chara({animation, ...props}) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./chara.glb')
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    // console.log(actions)
    actions[animation].reset().fadeIn(0.24).play();
    return () => actions?.[animation]?.fadeOut(0.24);
  }, [animation]);

  return (
    <group ref={group} {...props} dispose={null} >
      <group name="Scene">
        <group name="Armature">
          <skinnedMesh
            name="mesh_char_137"
            geometry={nodes.mesh_char_137.geometry}
            material={materials._034_Ghost}
            skeleton={nodes.mesh_char_137.skeleton}
            morphTargetDictionary={nodes.mesh_char_137.morphTargetDictionary}
            morphTargetInfluences={nodes.mesh_char_137.morphTargetInfluences}
            castShadow
          />
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/chara.glb')