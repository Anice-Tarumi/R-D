/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useImperativeHandle,forwardRef,useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { LoopOnce } from 'three'
import * as THREE from 'three'


export const ChestTest = forwardRef((props, ref) => {
  const group = ref || useRef()
  const { nodes, materials, animations } = useGLTF(props.modelPath)
  const { actions } = useAnimations(animations, group)

//   useEffect(() => {
//     console.log("Root_Scene visibility:", nodes.Root_Scene.visible);
//   }, []);

useEffect(() => {
    console.log("ChestTest group ref:", ref);
    console.log("Loaded model path:", props.modelPath);
  }, [ref, props.modelPath]);

    const openTreasure  = () => {
        // console.log(actions)
    // actions['Chest_Open'].play();
    // setTimeout(() => {
    //     actions['Chest_Open'].stop();
    // },2000)
    

    if (actions['Chest_Open']) {
        actions['Chest_Open'].setLoop(THREE.LoopOnce); // 一度だけ再生
        actions['Chest_Open'].reset().play();
        actions['Chest_Open'].clampWhenFinished = true; // 再生終了後に最後のフレームで停止
    }
    
    return () => {
        if (actions['Chest_Open']) {
            actions['Chest_Open'].stop();
        }
    };
    }
    

  return (
    <group ref={ref} {...props} dispose={null}>
      <group name="Root_Scene">
        <group name="RootNode">
          <group name="Chest_Armature" rotation={[0, 0, 0]} scale={1}>
            <primitive object={nodes.Root_Scene} />
          </group>
          <group name="Chest_Bottom_1" rotation={[-Math.PI / 2, 0, 0]} scale={1}>
            <skinnedMesh
              name="Chest_Bottom_2"
              geometry={nodes.Chest_Bottom_2.geometry}
              material={materials.DarkMetal}
              skeleton={nodes.Chest_Bottom_2.skeleton}
            />
            <skinnedMesh
              name="Chest_Bottom_3"
              geometry={nodes.Chest_Bottom_3.geometry}
              material={materials.Wood}
              skeleton={nodes.Chest_Bottom_3.skeleton}
            />
            <skinnedMesh
              name="Chest_Bottom_4"
              geometry={nodes.Chest_Bottom_4.geometry}
              material={materials.Metal}
              skeleton={nodes.Chest_Bottom_4.skeleton}
            />
            <skinnedMesh
              name="Chest_Bottom_5"
              geometry={nodes.Chest_Bottom_5.geometry}
              material={materials.Gold}
              skeleton={nodes.Chest_Bottom_5.skeleton}
            />
            <skinnedMesh
              name="Chest_Bottom_6"
              geometry={nodes.Chest_Bottom_6.geometry}
              material={materials.Gold_Dark}
              skeleton={nodes.Chest_Bottom_6.skeleton}
            />
          </group>
          <group name="Chest_Top_1" rotation={[-Math.PI / 2, 0, 0]} scale={1}>
            <skinnedMesh
              name="Chest_Top_2"
              geometry={nodes.Chest_Top_2.geometry}
              material={materials.DarkMetal}
              skeleton={nodes.Chest_Top_2.skeleton}
            />
            <skinnedMesh
              name="Chest_Top_3"
              geometry={nodes.Chest_Top_3.geometry}
              material={materials.Wood}
              skeleton={nodes.Chest_Top_3.skeleton}
            />
            <skinnedMesh
              name="Chest_Top_4"
              geometry={nodes.Chest_Top_4.geometry}
              material={materials.Metal}
              skeleton={nodes.Chest_Top_4.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  )
})

useGLTF.preload('./chests/Chest.glb')
